{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dilsh\\\\OneDrive\\\\Desktop\\\\Project Module Management System\\\\client\\\\src\\\\Pages(Didulanga)\\\\Proposal.js\",\n  _s = $RefreshSig$();\n// Proposal.js\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Proposal.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Proposal = () => {\n  _s();\n  const [groupId, setGroupId] = useState('');\n  const [students, setStudents] = useState([{\n    name: '',\n    id: '',\n    proposalMarks: '',\n    isValid: true\n  }, {\n    name: '',\n    id: '',\n    proposalMarks: '',\n    isValid: true\n  }, {\n    name: '',\n    id: '',\n    proposalMarks: '',\n    isValid: true\n  }, {\n    name: '',\n    id: '',\n    proposalMarks: '',\n    isValid: true\n  }]);\n  const [showValidation, setShowValidation] = useState(false);\n  const handleGroupIdChange = event => {\n    setGroupId(event.target.value);\n  };\n  const handleStudentChange = (event, index, field) => {\n    const updatedStudents = [...students];\n    updatedStudents[index][field] = event.target.value;\n    setStudents(updatedStudents);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setShowValidation(true);\n\n    // Check if any student name is filled but not the ID or proposalMarks\n    const incompleteStudents = students.filter(student => student.name && (!student.id || !student.proposalMarks));\n\n    // Set validation state for incomplete students\n    const updatedStudents = students.map(student => {\n      if (incompleteStudents.some(incomplete => incomplete === student)) {\n        return {\n          ...student,\n          isValid: false\n        };\n      }\n      return {\n        ...student,\n        isValid: true\n      };\n    });\n    setStudents(updatedStudents);\n\n    // Proceed with form submission if all fields are valid\n    if (groupId && !incompleteStudents.length) {\n      try {\n        const response = await axios.post('/api/students/proposal', {\n          groupId,\n          students: updatedStudents.map(({\n            isValid,\n            ...student\n          }) => student)\n        });\n        console.log(response.data);\n        // Handle success or show a success message\n      } catch (err) {\n        console.error(err);\n        // Handle error or show an error message\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"proposal-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter Proposal Marks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"proposal-form\",\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-id-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"groupId\",\n          children: \"Group Registration ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"groupId\",\n          value: groupId,\n          onChange: handleGroupIdChange,\n          placeholder: \"Enter group ID\",\n          required: true,\n          className: showValidation && !groupId ? 'invalid' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), showValidation && !groupId && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"validation-message\",\n          children: \"Group ID is required.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"student-sections\",\n        children: students.map((student, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"student-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Student \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"student-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `student${index}Name`,\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: `student${index}Name`,\n                value: student.name,\n                onChange: event => handleStudentChange(event, index, 'name'),\n                placeholder: \"Enter student name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `student${index}Id`,\n                children: \"ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: `student${index}Id`,\n                value: student.id,\n                onChange: event => handleStudentChange(event, index, 'id'),\n                placeholder: \"Enter student ID\",\n                required: student.name,\n                className: showValidation && student.name && !student.id ? 'invalid' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this), showValidation && student.name && !student.id && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"validation-message\",\n                children: \"Student ID is required.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `student${index}Marks`,\n                children: \"Marks:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: `student${index}Marks`,\n                value: student.proposalMarks,\n                onChange: event => handleStudentChange(event, index, 'proposalMarks'),\n                placeholder: \"Enter marks\",\n                required: student.name,\n                className: showValidation && student.name && !student.proposalMarks ? 'invalid' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), showValidation && student.name && !student.proposalMarks && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"validation-message\",\n                children: \"Marks are required.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Proposal, \"Z8GGwLYnjI+CNOEjbKT/kUiPfFo=\");\n_c = Proposal;\nexport default Proposal;\nvar _c;\n$RefreshReg$(_c, \"Proposal\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Proposal","_s","groupId","setGroupId","students","setStudents","name","id","proposalMarks","isValid","showValidation","setShowValidation","handleGroupIdChange","event","target","value","handleStudentChange","index","field","updatedStudents","handleSubmit","preventDefault","incompleteStudents","filter","student","map","some","incomplete","length","response","post","console","log","data","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","noValidate","htmlFor","type","onChange","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/dilsh/OneDrive/Desktop/Project Module Management System/client/src/Pages(Didulanga)/Proposal.js"],"sourcesContent":["// Proposal.js\r\nimport React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Proposal.css';\r\nimport axios from 'axios';\r\n\r\nconst Proposal = () => {\r\n  const [groupId, setGroupId] = useState('');\r\n  const [students, setStudents] = useState([\r\n    { name: '', id: '', proposalMarks: '', isValid: true },\r\n    { name: '', id: '', proposalMarks: '', isValid: true },\r\n    { name: '', id: '', proposalMarks: '', isValid: true },\r\n    { name: '', id: '', proposalMarks: '', isValid: true },\r\n  ]);\r\n  const [showValidation, setShowValidation] = useState(false);\r\n\r\n  const handleGroupIdChange = (event) => {\r\n    setGroupId(event.target.value);\r\n  };\r\n\r\n  const handleStudentChange = (event, index, field) => {\r\n    const updatedStudents = [...students];\r\n    updatedStudents[index][field] = event.target.value;\r\n    setStudents(updatedStudents);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setShowValidation(true);\r\n\r\n    // Check if any student name is filled but not the ID or proposalMarks\r\n    const incompleteStudents = students.filter(\r\n      (student) => student.name && (!student.id || !student.proposalMarks)\r\n    );\r\n\r\n    // Set validation state for incomplete students\r\n    const updatedStudents = students.map((student) => {\r\n      if (incompleteStudents.some((incomplete) => incomplete === student)) {\r\n        return { ...student, isValid: false };\r\n      }\r\n      return { ...student, isValid: true };\r\n    });\r\n\r\n    setStudents(updatedStudents);\r\n\r\n    // Proceed with form submission if all fields are valid\r\n    if (groupId && !incompleteStudents.length) {\r\n      try {\r\n        const response = await axios.post('/api/students/proposal', {\r\n          groupId,\r\n          students: updatedStudents.map(({ isValid, ...student }) => student),\r\n        });\r\n        console.log(response.data);\r\n        // Handle success or show a success message\r\n      } catch (err) {\r\n        console.error(err);\r\n        // Handle error or show an error message\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"proposal-container\">\r\n      <h2>Enter Proposal Marks</h2>\r\n      <form onSubmit={handleSubmit} className=\"proposal-form\" noValidate>\r\n        <div className=\"group-id-section\">\r\n          <label htmlFor=\"groupId\">Group Registration ID:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"groupId\"\r\n            value={groupId}\r\n            onChange={handleGroupIdChange}\r\n            placeholder=\"Enter group ID\"\r\n            required\r\n            className={showValidation && !groupId ? 'invalid' : ''}\r\n          />\r\n          {showValidation && !groupId && (\r\n            <span className=\"validation-message\">Group ID is required.</span>\r\n          )}\r\n        </div>\r\n        <div className=\"student-sections\">\r\n          {students.map((student, index) => (\r\n            <div key={index} className=\"student-section\">\r\n              <h4>Student {index + 1}</h4>\r\n              <div className=\"student-details\">\r\n                <div>\r\n                  <label htmlFor={`student${index}Name`}>Name:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id={`student${index}Name`}\r\n                    value={student.name}\r\n                    onChange={(event) => handleStudentChange(event, index, 'name')}\r\n                    placeholder=\"Enter student name\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label htmlFor={`student${index}Id`}>ID:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id={`student${index}Id`}\r\n                    value={student.id}\r\n                    onChange={(event) => handleStudentChange(event, index, 'id')}\r\n                    placeholder=\"Enter student ID\"\r\n                    required={student.name}\r\n                    className={showValidation && student.name && !student.id ? 'invalid' : ''}\r\n                  />\r\n                  {showValidation && student.name && !student.id && (\r\n                    <span className=\"validation-message\">Student ID is required.</span>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <label htmlFor={`student${index}Marks`}>Marks:</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    id={`student${index}Marks`}\r\n                    value={student.proposalMarks}\r\n                    onChange={(event) => handleStudentChange(event, index, 'proposalMarks')}\r\n                    placeholder=\"Enter marks\"\r\n                    required={student.name}\r\n                    className={showValidation && student.name && !student.proposalMarks ? 'invalid' : ''}\r\n                  />\r\n                  {showValidation && student.name && !student.proposalMarks && (\r\n                    <span className=\"validation-message\">Marks are required.</span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <button type=\"submit\" className=\"submit-btn\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Proposal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}