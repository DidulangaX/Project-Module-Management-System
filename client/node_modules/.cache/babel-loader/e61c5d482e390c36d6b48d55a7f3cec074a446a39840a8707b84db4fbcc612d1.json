{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dilsh\\\\OneDrive\\\\Desktop\\\\Project Module Management System\\\\client\\\\src\\\\Pages(Didulanga)\\\\Document.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from '../Components/Header';\nimport NavigationBar from '../Components/NavigationBar';\nimport Footer from '../Components/Footer';\nimport './Document.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Document = () => {\n  _s();\n  const [files, setFiles] = useState({\n    topicAssessmentForm: [],\n    projectCharter: [],\n    statusDocument1: [],\n    logBook: [],\n    proposalDocument: [],\n    statusDocument2: [],\n    finalThesis: []\n  });\n  const [groupIds, setGroupIds] = useState('');\n  const groupIdInputRef = useRef(null);\n  const handleDrop = (event, documentType) => {\n    event.preventDefault();\n    const droppedFiles = Array.from(event.dataTransfer.files);\n    setFiles(prevFiles => ({\n      ...prevFiles,\n      [documentType]: [...prevFiles[documentType], ...droppedFiles]\n    }));\n  };\n  const handleFileInputChange = (event, documentType) => {\n    const selectedFiles = Array.from(event.target.files);\n    setFiles(prevFiles => ({\n      ...prevFiles,\n      [documentType]: [...prevFiles[documentType], ...selectedFiles]\n    }));\n  };\n  const handleRemoveFile = (documentType, index) => {\n    const updatedFiles = [...files[documentType]];\n    updatedFiles.splice(index, 1);\n    setFiles(prevFiles => ({\n      ...prevFiles,\n      [documentType]: updatedFiles\n    }));\n  };\n  const handleSubmit = () => {\n    // Add your logic to handle file submission here\n    console.log('Files to be uploaded:', files);\n    console.log('Group ID:', groupIds);\n    // You can make an API call here to upload the files to the server\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"document-upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Documents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-id-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"groupIdInput\",\n          children: \"Group ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"groupIdInput\",\n          value: groupIds,\n          onChange: event => setGroupIds(event.target.value),\n          placeholder: \"Enter group ID\",\n          ref: groupIdInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), Object.keys(files).map(documentType => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"document-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: documentType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop-zone\",\n          onDrop: event => handleDrop(event, documentType),\n          onDragOver: event => event.preventDefault(),\n          onClick: () => documentType === 'topicAssessmentForm' ? groupIdInputRef.current.focus() : null // Focus on Group ID input for the first field\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag & drop files here, or click to select files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: `${documentType}Input`,\n            multiple: true,\n            onChange: event => handleFileInputChange(event, documentType),\n            className: \"file-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-list\",\n          children: files[documentType].map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-name\",\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRemoveFile(documentType, index),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-button\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, documentType, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Document, \"KS2sTyi5ByupUbrPBAflYOwcy7k=\");\n_c = Document;\nexport default Document;\nvar _c;\n$RefreshReg$(_c, \"Document\");","map":{"version":3,"names":["React","useState","useRef","Header","NavigationBar","Footer","jsxDEV","_jsxDEV","Document","_s","files","setFiles","topicAssessmentForm","projectCharter","statusDocument1","logBook","proposalDocument","statusDocument2","finalThesis","groupIds","setGroupIds","groupIdInputRef","handleDrop","event","documentType","preventDefault","droppedFiles","Array","from","dataTransfer","prevFiles","handleFileInputChange","selectedFiles","target","handleRemoveFile","index","updatedFiles","splice","handleSubmit","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","id","value","onChange","placeholder","ref","Object","keys","map","onDrop","onDragOver","onClick","current","focus","multiple","file","name","_c","$RefreshReg$"],"sources":["C:/Users/dilsh/OneDrive/Desktop/Project Module Management System/client/src/Pages(Didulanga)/Document.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Header from '../Components/Header';\r\nimport NavigationBar from '../Components/NavigationBar';\r\nimport Footer from '../Components/Footer';\r\nimport './Document.css';\r\n\r\nconst Document = () => {\r\n  const [files, setFiles] = useState({\r\n    topicAssessmentForm: [],\r\n    projectCharter: [],\r\n    statusDocument1: [],\r\n    logBook: [],\r\n    proposalDocument: [],\r\n    statusDocument2: [],\r\n    finalThesis: [],\r\n  });\r\n\r\n  const [groupIds, setGroupIds] = useState('');\r\n\r\n  const groupIdInputRef = useRef(null);\r\n\r\n  const handleDrop = (event, documentType) => {\r\n    event.preventDefault();\r\n    const droppedFiles = Array.from(event.dataTransfer.files);\r\n    setFiles((prevFiles) => ({ ...prevFiles, [documentType]: [...prevFiles[documentType], ...droppedFiles] }));\r\n  };\r\n\r\n  const handleFileInputChange = (event, documentType) => {\r\n    const selectedFiles = Array.from(event.target.files);\r\n    setFiles((prevFiles) => ({ ...prevFiles, [documentType]: [...prevFiles[documentType], ...selectedFiles] }));\r\n  };\r\n\r\n  const handleRemoveFile = (documentType, index) => {\r\n    const updatedFiles = [...files[documentType]];\r\n    updatedFiles.splice(index, 1);\r\n    setFiles((prevFiles) => ({ ...prevFiles, [documentType]: updatedFiles }));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // Add your logic to handle file submission here\r\n    console.log('Files to be uploaded:', files);\r\n    console.log('Group ID:', groupIds);\r\n    // You can make an API call here to upload the files to the server\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <NavigationBar />\r\n      <div className=\"document-upload-container\">\r\n        <h2>Upload Documents</h2>\r\n        <div className=\"group-id-input\">\r\n          <label htmlFor=\"groupIdInput\">Group ID:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"groupIdInput\"\r\n            value={groupIds}\r\n            onChange={(event) => setGroupIds(event.target.value)}\r\n            placeholder=\"Enter group ID\"\r\n            ref={groupIdInputRef}\r\n          />\r\n        </div>\r\n\r\n        {/* File Upload Fields */}\r\n        {Object.keys(files).map((documentType) => (\r\n          <div key={documentType} className=\"document-section\">\r\n            <h3>{documentType}</h3>\r\n            <div\r\n              className=\"drop-zone\"\r\n              onDrop={(event) => handleDrop(event, documentType)}\r\n              onDragOver={(event) => event.preventDefault()}\r\n              onClick={() => documentType === 'topicAssessmentForm' ? groupIdInputRef.current.focus() : null} // Focus on Group ID input for the first field\r\n            >\r\n              <p>Drag & drop files here, or click to select files</p>\r\n              <input\r\n                type=\"file\"\r\n                id={`${documentType}Input`}\r\n                multiple\r\n                onChange={(event) => handleFileInputChange(event, documentType)}\r\n                className=\"file-input\"\r\n              />\r\n            </div>\r\n            <div className=\"file-list\">\r\n              {files[documentType].map((file, index) => (\r\n                <div key={index} className=\"file-item\">\r\n                  <span className=\"file-name\">{file.name}</span>\r\n                  <button onClick={() => handleRemoveFile(documentType, index)}>Remove</button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <button className=\"upload-button\" onClick={handleSubmit}>\r\n              Submit\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Document;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}