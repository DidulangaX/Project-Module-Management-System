{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dilsh\\\\OneDrive\\\\Desktop\\\\Project Module Management System\\\\client\\\\src\\\\Pages(Didulanga)\\\\Document.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from '../Components/Header';\nimport NavigationBar from '../Components/NavigationBar';\nimport Footer from '../Components/Footer';\nimport './Document.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Document = () => {\n  _s();\n  const [files, setFiles] = useState({\n    TopicAssessmentForm: [],\n    ProjectCharter: [],\n    StatusDocument1: [],\n    LogBook: [],\n    ProposalDocument: [],\n    StatusDocument2: [],\n    FinalThesis: []\n  });\n  const [groupIds, setGroupIds] = useState('');\n  const groupIdInputRef = useRef(null);\n  const handleDrop = (event, documentType) => {\n    event.preventDefault();\n    const droppedFiles = Array.from(event.dataTransfer.files);\n    setFiles(prevFiles => ({\n      ...prevFiles,\n      [documentType]: [...prevFiles[documentType], ...droppedFiles]\n    }));\n  };\n  const handleFileInputChange = (event, documentType) => {\n    const selectedFiles = Array.from(event.target.files);\n    setFiles(prevFiles => ({\n      ...prevFiles,\n      [documentType]: [...prevFiles[documentType], ...selectedFiles]\n    }));\n  };\n  const handleRemoveFile = (documentType, index) => {\n    const updatedFiles = [...files[documentType]];\n    updatedFiles.splice(index, 1);\n    setFiles(prevFiles => ({\n      ...prevFiles,\n      [documentType]: updatedFiles\n    }));\n  };\n  const handleSubmit = async () => {\n    const formData = new FormData();\n    formData.append('groupId', groupIds);\n    Object.entries(files).forEach(([documentType, fileList]) => {\n      fileList.forEach(file => {\n        formData.append(`${documentType}Files`, file);\n      });\n    });\n    try {\n      const response = await fetch('http://localhost:8000/api/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        console.log('Files uploaded successfully');\n        // Reset the state or show a success message\n      } else {\n        console.error('Failed to upload files');\n        // Show an error message\n      }\n    } catch (error) {\n      console.error('Error uploading files:', error);\n      // Show an error message\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"document-upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Documents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-id-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"groupIdInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"groupIdInput\",\n          value: groupIds,\n          onChange: event => setGroupIds(event.target.value),\n          placeholder: \"Enter group ID\",\n          ref: groupIdInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), Object.keys(files).map(documentType => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"document-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: documentType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop-zone\",\n          onDrop: event => handleDrop(event, documentType),\n          onDragOver: event => event.preventDefault(),\n          onClick: () => documentType === 'TopicAssessmentForm' ? groupIdInputRef.current.focus() : null,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag & drop files here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), files[documentType].map((file, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: `${documentType}Input-${index}`,\n            multiple: true,\n            onChange: event => handleFileInputChange(event, documentType),\n            className: \"file-input\"\n          }, `${documentType}-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-list\",\n          children: files[documentType].map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-name\",\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRemoveFile(documentType, index),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-button\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, documentType, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Document, \"0+Ad747tS7s7jKM6h7GxnfekjRU=\");\n_c = Document;\nexport default Document;\nvar _c;\n$RefreshReg$(_c, \"Document\");","map":{"version":3,"names":["React","useState","useRef","Header","NavigationBar","Footer","jsxDEV","_jsxDEV","Document","_s","files","setFiles","TopicAssessmentForm","ProjectCharter","StatusDocument1","LogBook","ProposalDocument","StatusDocument2","FinalThesis","groupIds","setGroupIds","groupIdInputRef","handleDrop","event","documentType","preventDefault","droppedFiles","Array","from","dataTransfer","prevFiles","handleFileInputChange","selectedFiles","target","handleRemoveFile","index","updatedFiles","splice","handleSubmit","formData","FormData","append","Object","entries","forEach","fileList","file","response","fetch","method","body","ok","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","id","value","onChange","placeholder","ref","keys","map","onDrop","onDragOver","onClick","current","focus","multiple","name","_c","$RefreshReg$"],"sources":["C:/Users/dilsh/OneDrive/Desktop/Project Module Management System/client/src/Pages(Didulanga)/Document.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Header from '../Components/Header';\r\nimport NavigationBar from '../Components/NavigationBar';\r\nimport Footer from '../Components/Footer';\r\nimport './Document.css';\r\n\r\nconst Document = () => {\r\n  const [files, setFiles] = useState({\r\n    TopicAssessmentForm: [],\r\n    ProjectCharter: [],\r\n    StatusDocument1: [],\r\n    LogBook: [],\r\n    ProposalDocument: [],\r\n    StatusDocument2: [],\r\n    FinalThesis: [],\r\n  });\r\n  const [groupIds, setGroupIds] = useState('');\r\n  const groupIdInputRef = useRef(null);\r\n\r\n  const handleDrop = (event, documentType) => {\r\n    event.preventDefault();\r\n    const droppedFiles = Array.from(event.dataTransfer.files);\r\n    setFiles((prevFiles) => ({\r\n      ...prevFiles,\r\n      [documentType]: [...prevFiles[documentType], ...droppedFiles],\r\n    }));\r\n  };\r\n\r\n  const handleFileInputChange = (event, documentType) => {\r\n    const selectedFiles = Array.from(event.target.files);\r\n    setFiles((prevFiles) => ({\r\n      ...prevFiles,\r\n      [documentType]: [...prevFiles[documentType], ...selectedFiles],\r\n    }));\r\n  };\r\n\r\n  const handleRemoveFile = (documentType, index) => {\r\n    const updatedFiles = [...files[documentType]];\r\n    updatedFiles.splice(index, 1);\r\n    setFiles((prevFiles) => ({ ...prevFiles, [documentType]: updatedFiles }));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    const formData = new FormData();\r\n    formData.append('groupId', groupIds);\r\n\r\n    Object.entries(files).forEach(([documentType, fileList]) => {\r\n      fileList.forEach((file) => {\r\n        formData.append(`${documentType}Files`, file);\r\n      });\r\n    });\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Files uploaded successfully');\r\n        // Reset the state or show a success message\r\n      } else {\r\n        console.error('Failed to upload files');\r\n        // Show an error message\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading files:', error);\r\n      // Show an error message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <NavigationBar />\r\n      <div className=\"document-upload-container\">\r\n        <h2>Upload Documents</h2>\r\n        <div className=\"group-id-input\">\r\n          <label htmlFor=\"groupIdInput\"></label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"groupIdInput\"\r\n            value={groupIds}\r\n            onChange={(event) => setGroupIds(event.target.value)}\r\n            placeholder=\"Enter group ID\"\r\n            ref={groupIdInputRef}\r\n          />\r\n        </div>\r\n        {/* File Upload Fields */}\r\n        {Object.keys(files).map((documentType) => (\r\n          <div key={documentType} className=\"document-section\">\r\n            <h3>{documentType}</h3>\r\n            <div\r\n              className=\"drop-zone\"\r\n              onDrop={(event) => handleDrop(event, documentType)}\r\n              onDragOver={(event) => event.preventDefault()}\r\n              onClick={() =>\r\n                documentType === 'TopicAssessmentForm'\r\n                  ? groupIdInputRef.current.focus()\r\n                  : null\r\n              }\r\n            >\r\n              <p>Drag & drop files here</p>\r\n              {files[documentType].map((file, index) => (\r\n                <input\r\n                  key={`${documentType}-${index}`}\r\n                  type=\"file\"\r\n                  id={`${documentType}Input-${index}`}\r\n                  multiple\r\n                  onChange={(event) => handleFileInputChange(event, documentType)}\r\n                  className=\"file-input\"\r\n                />\r\n              ))}\r\n            </div>\r\n            <div className=\"file-list\">\r\n              {files[documentType].map((file, index) => (\r\n                <div key={index} className=\"file-item\">\r\n                  <span className=\"file-name\">{file.name}</span>\r\n                  <button onClick={() => handleRemoveFile(documentType, index)}>\r\n                    Remove\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <button className=\"upload-button\" onClick={handleSubmit}>\r\n              Submit\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Document;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}